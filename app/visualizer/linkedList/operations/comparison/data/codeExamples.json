{
  "javascript": "class Node {\n  constructor(data) {\n    this.data = data;\n    this.next = null;\n  }\n}\n\nfunction compareLists(l1, l2) {\n  while (l1 && l2) {\n    if (l1.data !== l2.data) return false;\n    l1 = l1.next;\n    l2 = l2.next;\n  }\n  return l1 === null && l2 === null;\n}",
  "python": "class Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\ndef compare_lists(l1, l2):\n    while l1 and l2:\n        if l1.data != l2.data:\n            return False\n        l1 = l1.next\n        l2 = l2.next\n    return l1 is None and l2 is None",
  "java": "class Node {\n    int data;\n    Node next;\n    Node(int data) {\n        this.data = data;\n        this.next = null;\n    }\n}\n\npublic class CompareLists {\n    public static boolean compare(Node l1, Node l2) {\n        while (l1 != null && l2 != null) {\n            if (l1.data != l2.data) return false;\n            l1 = l1.next;\n            l2 = l2.next;\n        }\n        return l1 == null && l2 == null;\n    }\n}",
  "c": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n\ntypedef struct Node {\n    int data;\n    struct Node* next;\n} Node;\n\nbool compareLists(Node* l1, Node* l2) {\n    while (l1 && l2) {\n        if (l1->data != l2->data) return false;\n        l1 = l1->next;\n        l2 = l2->next;\n    }\n    return l1 == NULL && l2 == NULL;\n}",
  "cpp": "#include <iostream>\nusing namespace std;\n\nclass Node {\npublic:\n    int data;\n    Node* next;\n    Node(int d) : data(d), next(nullptr) {}\n};\n\nbool compareLists(Node* l1, Node* l2) {\n    while (l1 && l2) {\n        if (l1->data != l2->data) return false;\n        l1 = l1->next;\n        l2 = l2->next;\n    }\n    return l1 == nullptr && l2 == nullptr;\n}"
}